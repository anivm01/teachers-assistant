// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String            @id @default(cuid())
  name          String?
  email         String?           @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  type          UserType          @default(Free)
  Downloads     DownloadHistory[]
}

enum UserType {
  Free
  Premium
  Admin
}

enum productType {
  Free
  Premium
}

model Category {
  id                    String              @id @default(cuid())
  category              String
  downloadableProduct   DownloadableProduct @relation(fields: [downloadableProductId], references: [id])
  downloadableProductId String
}

model Pdf {
  id                    String              @id @default(cuid())
  description           String
  fileName              String
  Downloads             DownloadHistory[]
  downloadableProduct   DownloadableProduct @relation(fields: [downloadableProductId], references: [id])
  downloadableProductId String
}

model Image {
  id                    String              @id @default(cuid())
  fileName              String
  downloadableProduct   DownloadableProduct @relation(fields: [downloadableProductId], references: [id])
  downloadableProductId String
}

model DownloadableProduct {
  id          String      @id @default(cuid())
  description String
  type        productType @default(Free)
  pdfs        Pdf[]
  images      Image[]
  category    Category[]
}

model DownloadHistory {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  pdf    Pdf    @relation(fields: [pdfId], references: [id])
  pdfId  String
}
